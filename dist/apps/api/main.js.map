{"version":3,"file":"main.js","mappings":"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","sources":["webpack://airborne/./apps/api/src/app/app.controller.ts","webpack://airborne/./apps/api/src/app/app.module.ts","webpack://airborne/./apps/api/src/app/app.service.ts","webpack://airborne/./apps/api/src/fft/fft.module.ts","webpack://airborne/./apps/api/src/fft/fft/fft.controller.ts","webpack://airborne/./apps/api/src/fft/fft/fft.service.ts","webpack://airborne/./libs/api-interfaces/src/index.ts","webpack://airborne/external commonjs \"@nestjs/common\"","webpack://airborne/external commonjs \"@nestjs/config\"","webpack://airborne/external commonjs \"@nestjs/core\"","webpack://airborne/external commonjs \"axios\"","webpack://airborne/external commonjs \"tslib\"","webpack://airborne/webpack/bootstrap","webpack://airborne/./apps/api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\nimport { Message } from '@airborne/api-interfaces';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  getData(): Message {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { FftModule } from '../fft/fft.module';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: process.env.NODE_ENV\n        ? 'apps/api/production.env'\n        : 'apps/api/development.env',\n      isGlobal: true,\n    }),\n    FftModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\nimport { Message } from '@airborne/api-interfaces';\n\n@Injectable()\nexport class AppService {\n  getData(): Message {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { FftController } from './fft/fft.controller';\nimport { FftService } from './fft/fft.service';\n\n@Module({\n  controllers: [FftController],\n  providers: [FftService],\n})\nexport class FftModule {}\n","import { TFFTResult } from '@airborne/airborne-types';\nimport { Controller, Get, HttpStatus, Res } from '@nestjs/common';\nimport { FftService } from './fft.service';\n\n@Controller('fft')\nexport class FftController {\n  constructor(private fftService: FftService) {}\n\n  @Get('decompose')\n  async fftDecompose(@Res() response): Promise<TFFTResult> {\n    try {\n      const fftDecomposition = await this.fftService.fftDecompose();\n\n      return await response.status(HttpStatus.OK).send(fftDecomposition);\n    } catch (error) {\n      return await response\n        .status(HttpStatus.BAD_REQUEST)\n        .send(`[FFT DECOMPOSE] ${error.message}`);\n    }\n  }\n}\n","import { TFFTResult, TTimeseriesRaw } from '@airborne/airborne-types';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport axios from 'axios';\n\n@Injectable()\nexport class FftService {\n  constructor(private configService: ConfigService) {}\n\n  public async fftDecompose(): Promise<TFFTResult> {\n    const pythonAPIPath = this.configService.get<string>('FLASK_API_PATH');\n    const url = `${pythonAPIPath}/fftdecompose`;\n\n    const fftDecompose = await (\n      await axios({\n        method: 'get',\n        url: url,\n      })\n    ).data;\n\n    let orginal: TTimeseriesRaw = {\n      name: 'Original',\n      data: fftDecompose['original'],\n    };\n\n    let periodicity: TTimeseriesRaw = {\n      name: 'Periodicity',\n      data: fftDecompose['periodicity'],\n    };\n\n    let noise: TTimeseriesRaw = {\n      name: 'Noise',\n      data: fftDecompose['noise'],\n    };\n\n    let psd: TTimeseriesRaw = {\n      name: 'Power Spectrum Density',\n      data: fftDecompose['psd'],\n    };\n\n    return {\n      original: orginal,\n      periodicity: periodicity,\n      noise: noise,\n      psd: psd,\n    };\n  }\n}\n","export * from './lib/api-interfaces';\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"axios\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  app.enableCors();\n  await app.listen(port);\n  Logger.log(\n    `ðŸš€ Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}